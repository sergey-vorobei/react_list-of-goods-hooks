{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","sort","word1","word2","ALPHABET","localeCompare","LENGTH","length","reverse","App","useState","setIsReversed","NONE","setSortType","isSelected","className","type","name","classNames","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAcK,SAASC,EACdC,EADK,GAGJ,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAENC,EAAY,YAAOH,GAiBzB,OAfAG,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQL,GACN,KAAKJ,EAASU,SACZ,OAAOF,EAAMG,cAAcF,GAC7B,KAAKT,EAASY,OACZ,OAAOJ,EAAMK,OAASJ,EAAMI,OAC9B,QACE,OAAO,MAITR,GACFC,EAAaQ,UAGRR,G,SAhCJN,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAmCE,IAAMe,EAAgB,WAC3B,MAAoCC,oBAAkB,GAAtD,mBAAOX,EAAP,KAAmBY,EAAnB,KACA,EAAgCD,mBAAmBhB,EAASkB,MAA5D,mBAAOd,EAAP,KAAiBe,EAAjB,KACMC,EAAaf,GAAeD,IAAaJ,EAASkB,KAmBxD,OACE,sBAAKG,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLC,KAAK,WACLF,UAAWG,IAAW,SAAU,UAAW,CACzC,WAAYpB,IAAaJ,EAASU,WAEpCe,QA1Be,WACrBN,EAAYnB,EAASU,WAmBjB,iCAWA,wBACEY,KAAK,SACLD,UAAWG,IAAW,SAAU,aAAc,CAC5C,WAAYpB,IAAaJ,EAASY,SAEpCa,QAhCa,WACnBN,EAAYnB,EAASY,SA0BjB,4BAUA,wBACEU,KAAK,SACLD,UAAWG,IAAW,SAAU,aAAc,CAC5C,YAAanB,IAEfoB,QAtCQ,WACdR,GAAeZ,IAgCX,qBAUCe,GAEG,wBACEE,KAAK,SACLD,UAAU,4BACVI,QA5CE,WACZR,GAAc,GACdE,EAAYnB,EAASkB,OAuCb,sBAUN,6BACGhB,EAAkBD,EAAiB,CAAEG,WAAUC,eAAcqB,KAC5D,SAACC,GAAD,OACE,oBAEE,UAAQ,OAFV,SAIGA,GAHIA,YC1HnBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.fd7e475a.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((word1, word2) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return word1.localeCompare(word2);\n      case SortType.LENGTH:\n        return word1.length - word2.length;\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setIsReversed] = useState<boolean>(false);\n  const [sortType, setSortType] = useState<SortType>(SortType.NONE);\n  const isSelected = isReversed || (sortType !== SortType.NONE);\n\n  const sortByAlphabet = () => {\n    setSortType(SortType.ALPHABET);\n  };\n\n  const sortByLength = () => {\n    setSortType(SortType.LENGTH);\n  };\n\n  const reverse = () => {\n    setIsReversed(!isReversed);\n  };\n\n  const reset = () => {\n    setIsReversed(false);\n    setSortType(SortType.NONE);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          name=\"alphabet\"\n          className={classNames('button', 'is-info', {\n            'is-light': sortType !== SortType.ALPHABET,\n          })}\n          onClick={sortByAlphabet}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames('button', 'is-success', {\n            'is-light': sortType !== SortType.LENGTH,\n          })}\n          onClick={sortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames('button', 'is-warning', {\n            'is-light': !isReversed,\n          })}\n          onClick={reverse}\n        >\n          Reverse\n        </button>\n\n        {isSelected\n          && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={reset}\n            >\n              Reset\n            </button>\n          )}\n      </div>\n\n      <ul>\n        {getReorderedGoods(goodsFromServer, { sortType, isReversed }).map(\n          (good) => (\n            <li\n              key={good}\n              data-cy=\"Good\"\n            >\n              {good}\n            </li>\n          ),\n        )}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}